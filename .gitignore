# Binaries for programs and plugins
*.exe
*.exe~
*.dll
*.so
*.dylib

# Test binary, built with `go test -c`
*.test

# Output of the go coverage tool, specifically when used with LiteIDE
*.out

# Dependency directories (remove the comment below to include it)
# vendor/

.vscode

# Config
config.*.json
!config.sample.json

# Terraform
# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log

# Exclude all .tfvars files, which are likely to contain sentitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
#
*.tfvars

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
#
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc
tf/**/builds


**/*.zip

# ANGULAR

# See http://help.github.com/ignore-files/ for more about ignoring files.

# compiled output
ui/dist
ui/tmp
ui/out-tsc
# Only exists if Bazel was run
ui/bazel-out

# dependencies
ui/node_modules

# profiling files
ui/chrome-profiler-events*.json
ui/speed-measure-plugin*.json

# IDEs and editors
ui/.idea
ui/.project
ui/.classpath
ui/.c9/
ui/*.launch
ui/.settings/
ui/*.sublime-workspace

# IDE - VSCode
ui/.vscode/*
ui/!.vscode/settings.json
ui/!.vscode/tasks.json
ui/!.vscode/launch.json
ui/!.vscode/extensions.json
ui/.history/*

# misc
ui//.sass-cache
ui//connect.lock
ui//coverage
ui//libpeerconnection.log
ui/npm-debug.log
ui/yarn-error.log
ui/testem.log
ui//typings

# System Files
ui/.DS_Store
ui/Thumbs.db
